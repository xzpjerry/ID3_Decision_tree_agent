from math import log
from modal import deci_tree as dt
import numpy as np

X = np.array([
    # True/False = 0.9/0.1
    # For Pat, 0.3==None, 0.6==Some, 0.9==Full
    # For Pri, 0.3==$, 0.6==$$, 0.9==$$$
    # For Type, 0.2==French, 0.4==Thai, 0.6==Burger, 0.8==Italian
    # For Est, 0.2 == 0-10, 0.4 == 10-30. 0.6 == 30-60, 0.8 == >60
    #Alt|Bar|Fri|Pat|Pri|Rai|Res|Typ|Est
    [0.9,0.1,0.1,0.6,0.9,0.1,0.9,0.2,0.2],
    [0.9,0.1,0.1,0.9,0.3,0.1,0.1,0.4,0.6],
    [0.1,0.9,0.1,0.6,0.3,0.1,0.1,0.6,0.2],
    [0.9,0.1,0.9,0.9,0.3,0.1,0.1,0.4,0.4],
    [0.9,0.1,0.9,0.9,0.9,0.1,0.9,0.2,0.8],
    [0.1,0.9,0.1,0.6,0.6,0.9,0.9,0.8,0.2],
    [0.1,0.9,0.1,0.3,0.3,0.9,0.1,0.6,0.2],
    [0.1,0.1,0.1,0.6,0.6,0.9,0.9,0.4,0.2],
    [0.1,0.9,0.9,0.9,0.3,0.9,0.1,0.6,0.8],
    [0.9,0.9,0.9,0.9,0.9,0.1,0.9,0.8,0.4],
    [0.1,0.1,0.1,0.3,0.3,0.1,0.1,0.4,0.2],
    [0.9,0.9,0.9,0.9,0.3,0.1,0.1,0.6,0.6]
])
XT = X.T
# print(X,'\n', XT)
# 12 by 1 
y = [
    [0.9],
    [0.1],
    [0.9],
    [0.9],
    [0.1],
    [0.9],
    [0.1],
    [0.9],
    [0.1],
    [0.1],
    [0.1],
    [0.9]
    ]

class ID3(object):
    """docstring for ClassName"""
    def __init__(self, arg):
        super(ClassName, self).__init__()
        self.arg = arg

    def entropy(self):
        pass

    def info_gain(self):
        pass
        

if __name__ == "__main__":
    dt.test()